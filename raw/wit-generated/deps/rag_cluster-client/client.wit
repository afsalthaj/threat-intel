package rag:cluster-client;

interface cluster-client {
  use golem:rpc/types@0.1.1.{ uri as golem-rpc-uri };
  use wasi:io/poll@0.2.0.{ pollable as wasi-io-pollable };
  use rag:cluster-exports/api.{ alert-message, cluster-input };
  resource future-get-alert-messages-result {
    subscribe: func() -> wasi-io-pollable;
    get: func() -> option<result<list<alert-message>, string>>;
  }
  resource future-process-cluster-input-result {
    subscribe: func() -> wasi-io-pollable;
    get: func() -> option<result<option<alert-message>, string>>;
  }
  resource api {
    constructor(location: golem-rpc-uri);
    blocking-get-alert-messages: func() -> result<list<alert-message>, string>;
    get-alert-messages: func() -> future-get-alert-messages-result;
    blocking-process-cluster-input: func(log: cluster-input) -> result<option<alert-message>, string>;
    process-cluster-input: func(log: cluster-input) -> future-process-cluster-input-result;
  }
}

world wasm-rpc-client-cluster {
  export cluster-client;
}
